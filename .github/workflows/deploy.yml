name: Deploy BedrockChatbot

permissions:
  id-token: write # Required for GitHub to be able to create a token for you to authenticate with AWS
  contents: read  # Permits your action to read this repo.

on:
  push:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Run script file
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      run: |
        #apt-get update -qy
        #apt-get install -y curl gnupg software-properties-common
        #apt-get install -y unzip
      
          # Install Python 3
          #sudo apt-get install -y python3 python3-pip
      
          # Install Git (usually pre-installed in GitLab runners)
          #sudo apt-get install -y git
      
          # Install jq
          sudo apt-get install -y jq
      
          # Install AWS CLI
          #curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          #unzip awscliv2.zip
          #./aws/install

          # Install AWS CDK
          npm install -g aws-cdk

          python3 --version
          git --version
          node --version
          jq --version
          aws --version
          cdk --version

          cd cdk
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install -r requirements.txt
          cd ..

          has_colors() {
              local has_colors=false
              if [ -t 1 ]; then
                  if command -v tput >/dev/null 2>&1; then
                      if [ "$TERM" != linux ]; then
                          has_colors=true
                      fi
                  fi
              fi
              echo $has_colors
          }
          
          if $(has_colors); then
              # Use color codes
              DEFAULT_COLOR="\033[0m"
              GREEN_COLOR="\033[0;32m"
              RED_COLOR="\033[0;31m"
          else
              # Don't use color codes
              DEFAULT_COLOR=""
              GREEN_COLOR=""
              RED_COLOR=""
          fi

          aws s3 ls

          user_pool_id=$(aws cognito-idp list-user-pools --max-results 60 --query 'UserPools[?contains(Name, `ChatbotUserPool`)].Id' --output text)
          if [ -n "$user_pool_id" ] && [ "$user_pool_id" != "None" ]; then
              cognitoDomain=$(aws cognito-idp describe-user-pool --user-pool-id "$user_pool_id" --query 'UserPool.Domain' --output text)
              if [ -n "$cognitoDomain" ] && [ "$cognitoDomain" != "None" ]; then
                  echo -e "${DEFAULT_COLOR}User pool found with ID $user_pool_id and domain $cognitoDomain"
              else
                  echo -e "${DEFAULT_COLOR}User pool found with ID $user_pool_id, but no Domain"
                  cognitoDomain="genchatbot-$(LC_ALL=C tr -dc 'a-z0-9' < /dev/urandom | head -c 8)-$(date +%y%m%d%H%M)"
                  echo -e "${DEFAULT_COLOR}New Domain Set: $cognitoDomain"
              fi
          else
              cognitoDomain="genchatbot-$(LC_ALL=C tr -dc 'a-z0-9' < /dev/urandom | head -c 8)-$(date +%y%m%d%H%M)"
              echo -e "${DEFAULT_COLOR}No User Pool or Domain Found, Creating New Domain: $cognitoDomain"
          fi

          
      shell: bash
